WarningCPPFLAGS =
ifdef AT_NCBI
  WarningCPPFLAGS = \
  	-Waddress -Wbool-compare -Wbool-operation -Wc++11-compat  -Wc++14-compat -Wchar-subscripts -Wcomment \
    -Wformat -Wint-in-bool-context -Winit-self -Wlogical-not-parentheses -Wmaybe-uninitialized -Wmemset-elt-size -Wmemset-transposed-args \
    -Wnarrowing -Wnonnull -Wnonnull-compare -Wopenmp-simd -Wparentheses  -Wreorder -Wreturn-type \
    -Wsequence-point -Wsign-compare -Wsizeof-pointer-memaccess -Wstrict-aliasing -Wstrict-overflow=1 -Wswitch -Wtautological-compare \
    -Wtrigraphs -Wuninitialized -Wunknown-pragmas -Wunused-function -Wunused-label -Wunused-value -Wunused-variable -Wvolatile-register-var \
    -Wextra \
    -Wcast-align -Wconversion -Wdeprecated-declarations -Wformat -Winit-self -Wlogical-op \
    -Wmissing-braces -Wmissing-field-initializers -Wmissing-format-attribute -Wmissing-include-dirs \
    -Woverloaded-virtual -pedantic -Wparentheses -Wpointer-arith -Wsequence-point -Wshadow -Wunused \
    -Wsuggest-attribute=format -Wswitch -Wuninitialized -Wsign-conversion -Wuseless-cast 
endif

SimpleCPPFLAGS = -std=gnu++14 -pthread -malign-double -fno-math-errno -fdiagnostics-color=always $(WarningCPPFLAGS)
  # -Werror 
  # -Wunreachable-code  # Wrongly reports virtual functions
  # -Woverloaded-virtual -Wpointer-arith -Wwrite-strings  
  # -Wenum-clash -Wnested-externs -Wstrict-prototypes -Winline -Wredundant-decls -Wtraditional 
	# -ffloat-store  # slows down two-fold
	# -ffinite-math-only  # NAN problem
# Disable debugging

OptCPPFLAGS = $(SimpleCPPFLAGS) -O3 
DebugCPPFLAGS = $(SimpleCPPFLAGS) -O3 -g


CXX=g++
COMPILE.cpp= $(CXX) $(CPPFLAGS)  -c 
LIBS=-pthread 
ECHO = echo ""; echo ""


CODE_DIR = $(HOME)/code


CPP_DIR = $(CODE_DIR)/cpp

COMMON_HPP = $(CPP_DIR)/common.hpp $(CPP_DIR)/common.inc
$(CPP_DIR)/common.o:	$(COMMON_HPP)
COMMON = $(CPP_DIR)/common $(CPP_DIR)/application

$(CPP_DIR)/application.o:	$(CPP_DIR)/application.hpp $(COMMON_HPP)
$(CPP_DIR)/xml.o: $(CPP_DIR)/xml.hpp $(COMMON_HPP)
$(CPP_DIR)/graph.o:	$(COMMON_HPP) $(CPP_DIR)/graph.hpp


AI_DIR = $(CPP_DIR)/AI
$(AI_DIR)/expr.o:	$(AI_DIR)/expr.hpp $(COMMON_HPP)


LANG_DIR = $(CODE_DIR)/lang
$(LANG_DIR)/cfgrammar.o: $(LANG_DIR)/cfgrammar.hpp $(COMMON_HPP) $(CPP_DIR)/graph.hpp
$(LANG_DIR)/language.o: $(COMMON_HPP) $(LANG_DIR)/language.hpp $(LANG_DIR)/utf8.hpp


DM_DIR = $(CPP_DIR)/dm

NUMERIC_HPP = $(DM_DIR)/numeric.hpp $(COMMON_HPP)
$(DM_DIR)/numeric.o:	$(NUMERIC_HPP)
NUMERIC_OBJ = $(DM_DIR)/numeric.o $(CPP_DIR)/common.o
NUMERIC = $(DM_DIR)/numeric $(COMMON)

$(DM_DIR)/matrix.o: $(DM_DIR)/matrix.hpp $(NUMERIC_HPP)
$(DM_DIR)/optim.o:	$(DM_DIR)/optim.hpp $(DM_DIR)/matrix.hpp $(NUMERIC_HPP) 

MATRIX = $(DM_DIR)/matrix $(NUMERIC)

DM_HPP = $(NUMERIC_HPP) $(DM_DIR)/matrix.hpp $(DM_DIR)/optim.hpp $(DM_DIR)/dataset.hpp
$(DM_DIR)/dataset.o:	$(DM_HPP)
DM_OBJ = $(NUMERIC_OBJ) $(DM_DIR)/matrix.o $(DM_DIR)/optim.o $(DM_DIR)/dataset.o
DM = $(NUMERIC) $(DM_DIR)/matrix $(DM_DIR)/optim $(DM_DIR)/dataset

PREDICT_HPP = $(DM_DIR)/prediction.hpp $(DM_HPP)
$(DM_DIR)/prediction.o: $(PREDICT_HPP)
PREDICT_OBJ = $(DM_DIR)/prediction.o $(DM_OBJ) 
PREDICT = $(DM_DIR)/prediction $(DM) 


PHYL_DIR = $(CPP_DIR)/phylogeny

$(PHYL_DIR)/distTree.o:	$(PHYL_DIR)/distTree.hpp $(PREDICT_HPP) $(CPP_DIR)/graph.hpp
DISTTREE_OBJ = $(PHYL_DIR)/distTree.o $(PREDICT_OBJ) $(CPP_DIR)/graph.o
DISTTREE = $(PHYL_DIR)/distTree $(PREDICT) $(CPP_DIR)/graph

$(PHYL_DIR)/evolution.o:	$(PHYL_DIR)/evolution.hpp $(NUMERIC_HPP)

$(PHYL_DIR)/featureTree.o:	$(PHYL_DIR)/featureTree.hpp $(DM_HPP) $(CPP_DIR)/graph.hpp
FEATURE_TREE_OBJ = $(PHYL_DIR)/featureTree.o $(DM_OBJ) $(CPP_DIR)/graph.o
FEATURE_TREE = $(PHYL_DIR)/featureTree $(DM) $(CPP_DIR)/graph


GEN_DIR = $(CODE_DIR)/genetics
$(GEN_DIR)/asn.o:	$(GEN_DIR)/asn.hpp $(COMMON_HPP)
$(GEN_DIR)/genbank_text.o:	$(GEN_DIR)/genbank_text.hpp $(COMMON_HPP)
$(GEN_DIR)/gff.o: $(GEN_DIR)/gff.hpp $(COMMON_HPP)
$(GEN_DIR)/seq.o: $(GEN_DIR)/seq.hpp $(COMMON_HPP)
SEQ_OBJ = $(GEN_DIR)/seq.o $(CPP_DIR)/common.o 
$(GEN_DIR)/hmm.o: $(GEN_DIR)/hmm.hpp $(GEN_DIR)/seq.hpp $(DM_DIR)/matrix.hpp $(NUMERIC_HPP)
HMM_OBJ = $(GEN_DIR)/hmm.o $(GEN_DIR)/seq.o $(DM_DIR)/matrix.o $(NUMERIC_OBJ)
$(GEN_DIR)/GenomeTab.o:	$(GEN_DIR)/GenomeTab.hpp $(COMMON_HPP)


GEN_NCBI_DIR = $(CODE_DIR)/genetics_ncbi
$(GEN_NCBI_DIR)/align.o:	$(GEN_NCBI_DIR)/align.hpp $(NUMERIC_HPP) $(GEN_DIR)/seq.hpp $(PHYL_DIR)/evolution.hpp
ALIGN = $(GEN_DIR)/seq $(DM) $(PHYL_DIR)/evolution $(GEN_NCBI_DIR)/align


DATABASE_DIR = $(CODE_DIR)/database
$(DATABASE_DIR)/db.o:	$(DATABASE_DIR)/db.hpp $(COMMON_HPP)
$(DATABASE_DIR)/pig.o:	$(DATABASE_DIR)/pig.hpp $(COMMON_HPP) $(DATABASE_DIR)/db.hpp

$(DATABASE_DIR)/genbank.o: $(DATABASE_DIR)/genbank.hpp $(COMMON_HPP) $(DATABASE_DIR)/db.hpp $(GEN_DIR)/seq.hpp 
GENBANK = $(DATABASE_DIR)/genbank $(GEN_DIR)/seq $(DATABASE_DIR)/db
GenBank_LIB = xncbi xobjutil taxon1 $(OBJMGR_LIBS) ncbi_xloader_asn_cache asn_cache bdb $(SDBAPI_LIB) xconnect xutil ncbi_xdbapi_ctlib$(STATIC) xid_utils$(STATIC)
GenBank_LIBS = $(DL_LIBS)  -lz  $(BERKELEYDB_LIBS) -lxutil $(SDBAPI_LIBS) $(DL_LIBS) $(SYBASE_LIBS) 
  # $(NCBI_C_LIBPATH) -lctutils

